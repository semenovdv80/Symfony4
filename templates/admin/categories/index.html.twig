{% extends 'admin/base.html.twig' %}

{% block stylesheets %}
<link href="{{asset('jstree/dist/themes/default/style.css')}}" rel='stylesheet'>
{% endblock %}

{% block content %}
<div id="category_tree"></div>
{% endblock %}

{% block javascripts %}
<script src="{{asset('jstree/dist/jstree.js')}}"></script>
<script>
    var tree =  $('#category_tree');
    //show categories tree
    tree.jstree({
        'core': {
            "check_callback": true, // enable all modifications
            "themes": { "url": true, "name": 'default'},
            'data': {
                'url': function (node) {
                    return '/admin/category/gettree';
                }
            }
        },
        "types" : {
            "#" : {
                "max_children" : 1,
                "max_depth" : 4,
                "valid_children" : ["root"]
            },
            "root" : {
                "icon" : "/static/3.3.5/assets/images/tree_icon.png",
                "valid_children" : ["default"]
            },
            "default" : {
                "valid_children" : ["default","file"]
            },
            "file" : {
                "icon" : "glyphicon glyphicon-file",
                "valid_children" : []
            }
        },
        'plugins': ['dnd', 'sort', 'contextmenu', 'state'],
        "contextmenu":{
            "items": function($node) {
                return {
                    "Create": {
                        "separator_before": false,
                        "separator_after": false,
                        "label": "Добавить",
                        "action": function (obj) {
                            tree.jstree('create_node', $node, {text : "Новая категория"}, 'last' , function(new_node){
                                $.ajax({
                                    url: '/admin/category/add',
                                    type: 'POST',
                                    data: new_node,
                                    dataType: 'json',
                                    success: function (id) {
                                        //assign saved id to node
                                        new_node.original.id = id;
                                        //rename node
                                        tree.jstree("edit", new_node);
                                    }
                                });
                            });
                        }
                    },
                    "Rename": {
                        "separator_before": false,
                        "separator_after": false,
                        "label": "Изменить",
                        "action": function (obj) {
                            tree.jstree('edit', $node);
                        }
                    },
                    "Remove": {
                        "separator_before": false,
                        "separator_after": false,
                        "label": "Удалить",
                        "action": function (obj) {
                            tree.jstree('delete_node', $node);
                        }
                    }
                };
            }
        }
    });

    //rename category
    tree.bind("rename_node.jstree", function (e, data) {
        var id = data.node.original.id;
        var text = data.node.text;
        $.ajax({
            url: '/admin/category/edit',
            type: 'POST',
            data: {'id': id, 'text': text},
            success: function (data) {
                console.log('изменено')
            }
        });
    });

    //move node by tree
    tree.bind("move_node.jstree", function (e, data) {
        console.log(data);
        if (data.parent == '#') {
            noty_message('error', 'top', 'Невозможно разместить выше корневой папки!', 1000, true);
        } else {
            $.ajax({
                url: '/admin/category/settree',
                headers: {'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')},
                type: 'POST',
                data: {'node_id': data.node.id, 'parent_id': data.parent},
                dataType: 'json',
                success: function (data) {
                    if (data == false) {
                        noty_message('error', 'top', 'Изменение недоступно!', 1000, true);
                    } else if (data == true) {
                        noty_message('success', 'top', 'Изменение сохранено', 1000, false);
                    } else {
                        noty_message('error', 'top', 'Ошибка!', 1000, true);
                    }
                }
            });
        }
    });

    function noty_message(type, layout, text, timeout, reload) {
        new Noty({
            type: type,
            layout: layout,
            theme: 'metroui',
            text: '<div class="text-center">'+text+'</div>',
            timeout: timeout,
            callbacks: {
                afterClose: function () {
                    if (reload == true) {location.reload()}
                }
            }
        }).show();
    }
</script>
{% endblock %}
